<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.p2p.base.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.Account">
    <id column="id" property="id" />
    <result column="tradePassword" property="tradePassword" />
    <result column="usableAmount" property="usableAmount" />
    <result column="freezedAmount" property="freezedAmount" />
    <result column="borrowLimitAmount" property="borrowLimitAmount" />
    <result column="version" property="version" />
    <result column="unReceiveInterest" property="unReceiveInterest" />
    <result column="unReceivePrincipal" property="unReceivePrincipal" />
    <result column="unReturnAmount" property="unReturnAmount" />
    <result column="remainBorrowLimit" property="remainBorrowLimit" />
  </resultMap>

  <insert id="insert">
    insert into account (id,tradePassword, usableAmount, freezedAmount, borrowLimitAmount,
      version, unReceiveInterest, unReceivePrincipal, unReturnAmount, remainBorrowLimit
      )
    values (#{id},#{tradePassword}, #{usableAmount}, #{freezedAmount}, #{borrowLimitAmount},
      #{version}, #{unReceiveInterest}, #{unReceivePrincipal}, #{unReturnAmount}, #{remainBorrowLimit}
      )
  </insert>
  <update id="updateByPrimaryKey">
    update account
    set tradePassword = #{tradePassword},
      usableAmount = #{usableAmount},
      freezedAmount = #{freezedAmount},
      borrowLimitAmount = #{borrowLimitAmount},
      version = version +1,
      unReceiveInterest = #{unReceiveInterest},
      unReceivePrincipal = #{unReceivePrincipal},
      unReturnAmount = #{unReturnAmount},
      remainBorrowLimit = #{remainBorrowLimit}
    where id = #{id} and version = #{version}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, tradePassword, usableAmount, freezedAmount, borrowLimitAmount, version, 
    unReceiveInterest, unReceivePrincipal, unReturnAmount, remainBorrowLimit
    from account
    where id = #{id}
  </select>

</mapper>